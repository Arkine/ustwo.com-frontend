import React from 'react';
import classnames from 'classnames';
import Imager from 'imager.jsx';
import TransitionManager from 'react-transition-manager';

import Actions from 'flux/actions';
import CloseButton from 'elements/close-button';
import NewsFlash from 'elements/news-flash';

import {onClickContent} from 'modules/modal';

const takeover = {
  title: "We launched MoodNotes",
  description: "We make transformative work for clients, create our own innovative IP, design award winning games and invest in, develop and grow new ventures.",
  links: [{
    type: 'http',
    text: 'Go to website',
    url: '/website'
  }, {
    type: 'http',
    text: 'Download app',
    url: '/app'
  }],
  image: 'images/home/moodnotes_takeover_image.png'
};

export default class TakeOver extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      showContent: false
    };
  }
  render = () => {
    const TakeoverImage = Imager({});
    let content;
    if(this.state.showContent) {
      content = (
        <div key="detail" className="take-over__content">
          <CloseButton onClose={this.onClickClose} className="take-over__content__close" autoAnim={1000} />
          <h1 className="take-over__content__title">{takeover.title}</h1>
          <p className="take-over__content__description">{takeover.description}</p>
          {takeover.links.map(this.renderLink)}
          <TakeoverImage className="take-over__content__image" src={takeover.image} />
        </div>
      );
    } else {
      content = (
        <div key="news-flash" className="take-over__news-flash">
          <NewsFlash className="take-over__news-flash__animation" autoAnim={50} loop={true} />
          <h1 className="take-over__news-flash__title">News</h1>
        </div>
      );
    }
    return (
      <div className="take-over" onClick={onClickContent}>
        <TransitionManager className="take-over__content-wrapper" component="div" duration={800}>
          {content}
        </TransitionManager>
      </div>
    );
  }
  renderLink(link) {
    let prefix = "";
    switch(link.type) {
      case 'email':
        prefix = "mailto:";
      break;
      case 'tel':
        prefix = "tel:";
      break;
    }
    return <a className={`take-over__content__link ${link.type}`} href={`${prefix}${link.url}`}>{link.text}</a>;
  }
  componentDidMount() {
    this.contentTimeout = setTimeout(() => {
      this.setState({
        showContent: true
      });
    }, 5000);
  }
  componentWillUnmount() {
    clearTimeout(this.contentTimeout);
  }
  onClickClose() {
    Actions.closeModal();
  }
};
