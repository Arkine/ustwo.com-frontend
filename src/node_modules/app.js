'use strict'

import 'babelify/polyfill';
import React from 'react';
import TransitionManager from 'react-transition-manager';
// TODO: see if there's a better way to get fonts in
import 'localfont';
import 'TweenMax';
import 'TimelineLite';
import 'TweenLite-ScrollToPlugin';
import 'TweenLite-EasePack';
import Tracking from '_lib/tracking';

import Router from 'flux/router';
import Store from 'flux/store';
import Navigation from 'modules/navigation';
import Footer from 'modules/footer';
import Modal from 'modules/modal';
import EntranceAnimation from 'elements/entrance-animation';
import ContactTray from 'components/contact-tray';
import TakeOver from 'modules/take-over';

const pageMap = {
  home: require('templates/page-home'),
  work: require('templates/page-work')
};

export default class App extends React.Component {
  constructor(props) {
    super(props);
    this.state = Store.getData();
  }
  componentWillMount() {
    Router.init(this.props.initialUrl);
    window.Tracking = new Tracking();
  }
  componentDidMount() {
    Store.addChangeListener(this.onStoreChange);
  }
  componentWillUnmount() {
    Store.removeChangeListener(this.onStoreChange);
    window.Tracking = null;
  }
  onStoreChange = () => {
    this.setState(Store.getData());
  }
  render() {
    const renderData = this.state.data;
    const animationOptions = {
      ease: Power2.easeOut,
      y: -68,
      clearProps: 'transform'
    };
    let content;
    if(this.state.page === 'notfound') {
      content = <div className="app">404</div>;
    } else {
      content = (
        <div className="app">
          <EntranceAnimation className="nav-wrapper" delay={0.5} duration={0.5} options={animationOptions} findElement={element => element.children[0]}>
            <Navigation data={renderData.pages} customClass="transparent-white" />
          </EntranceAnimation>
          <TransitionManager component="div" className="app__stage" duration="500">
            <div className="app__stage__page-container" key={this.state.page}>
              {this.getPage(this.state.page)}
              <Footer />
            </div>
          </TransitionManager>
          <TransitionManager component="div" className="app__modal" duration="500">
            {this.renderModal()}
          </TransitionManager>
        </div>
      );
    }
    return content;
  }
  renderModal() {
    let modal;
    if(this.state.modal) {
      let content;
      switch(this.state.modal) {
        case 'contacts':
          content = <ContactTray />;
        break;
        case 'take-over':
          content = <TakeOver />;
        break;
      }
      modal = <Modal key={this.state.modal}>{content}</Modal>;
    }
    return modal;
  }
  getPage(pageId) {
    return React.createElement(pageMap[pageId], this.state);
  }
};
